# This dispatched workflow merges a Bitbucket repo into an existing GitHub repo and creates a PR.
# See: https://rac-wa.atlassian.net/wiki/spaces/DEVX/pages/2829975618/Migrate+from+BitBucket
#
# Secrets:
#   RAC2GH_GITHUB_TOKEN
#     GitHub PAT required to push commits to the repo and create a new PR
#
#   RAC2GH_BITBUCKET_USERNAME
#     The bitbucket username used to generate RAC2GH_BITBUCKET_PAT required to clone the source repo
#     This can be viewed by viewing your BitBucket accounts Personal Settings. In the Account Settings tab
#     there is a Bitbucket profile settings section with your username visible.
#
#   RAC2GH_BITBUCKET_PAT
#     The bitbucket PAT required to clone the source repo. This can be created in BitBucket by:
#     (Click Account Icon) -> Personal Settings -> App passwords -> Create app password
#     The app password only needs Repository (Read).

name: 'RAC2GH: Migrate repo from BitBucket'

on:
  workflow_dispatch:
    inputs:
      bitbucket-repo:
        description: Name of the BitBucket repo
        required: true
      github-repo:
        description: Name of the GitHub repo
        required: true
      push-branches:
        description: Migrate all branches.
        required: true
        type: boolean
      add-to-codacy:
        description: Add the GitHub repo to Codacy?
        required: true
        type: boolean
      push-changes:
        description: 'Whether we will push changes. When disabled this will perform a dry run'
        required: true
        type: boolean

# Limit concurrency to 1 per git repo
concurrency: rac2gh_${{inputs.github-repo}}
        
env:
  BITBUCKET_WORKSPACE: aleksstuff
  MIGRATION_BRANCH: migration
  GITHUB_ORG: bortington
        
jobs:
  migrate-bitbucket-to-github:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{env.GITHUB_ORG}}/${{inputs.github-repo}}
          fetch-depth: 0
          path: target
          token: ${{ secrets.RAC2GH_GITHUB_TOKEN }}
          
      - name: Check branch does not exist
        working-directory: target
        shell: bash
        run: |
          migrationExists=$(git ls-remote --heads origin $MIGRATION_BRANCH)
          
          if [[ -z "$migrationExists" ]]; then
              echo 'Migration branch does not exist. Continuing'
          else
              echo "::error::Migration branch already exists. Please delete this branch and run the workflow again"
              exit 1
          fi
          
      - shell: bash
        run: |
          
          echo $SHELL
          
          appToken=${{secrets.RAC2GH_BITBUCKET_PAT}}
          bbUsername=${{secrets.RAC2GH_BITBUCKET_USERNAME}}
          
          gitUrl=https://$bbUsername:$appToken@bitbucket.org/$BITBUCKET_WORKSPACE/${{inputs.bitbucket-repo}}.git
          
          echo "Cloning source repo from $gitUrl"
          
          git clone --mirror $gitUrl source
          
          cd source
          
          git branch -rl | echo
          
          # sourceBranch=$(git branch -vv | grep -Po "^[\s\*]*\K[^\s]*(?=.*$(git branch -rl '*/HEAD' | grep -o '[^ ]\+$'))")
          
          echo "What the fuck"
          sourceBranch=$(git rev-parse --abbrev-ref origin/HEAD | cut -c8-)
          #sourceBranch=$(git branch -rl "*/HEAD" | cut -d/ -f1)
          echo "Is happening"
          
          echo "Source repository main branch: $sourceBranch"
          
          # Throw if branch default branch was most definitely incorrect
          if [ $sourceBranch -eq "master" ] ||  [ $sourceBranch -eq "main ]; then
              echo "SOURCE_BRANCH=$sourceBranch" >> $GITHUB_ENV
              echo "Set SOURCE_BRANCH env var to $sourceBranch"
          else
              echo "::error::Failed to detect default branch from source repo. Got: $sourceBranch"
              exit 1
          fi
          
          #echo "SOURCE_BRANCH=$sourceBranch" >> $GITHUB_ENV
          
          git fetch --all --tags
          
          echo "Fetching lfs content"
          git lfs fetch --all
        
      - name: Merge source into target
        working-directory: target
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          
          echo "Adding source repo as new remote"
          git remote add source ../source --fetch --tags
          
          echo "Fetching lfs content from source mirror repo..."
          git lfs fetch source --all
          git checkout -b $MIGRATION_BRANCH
          
          echo "Merging source main branch into destination"
          git merge source/$SOURCE_BRANCH --allow-unrelated-histories -X theirs

          echo "Push branches: '${{inputs.push-branches}}'"

          # Checkout all branch from source remote, excluding the main branch
          if [ "${{inputs.push-branches}}" == "true" ]
          then
            echo "Checking out all branches from source repo"
            
            for remote in `git branch -r | grep source/ | grep -v $SOURCE_BRANCH | grep -oP 'source/\K.*'`
            do 
              git checkout $remote
              echo "Checked out $remote"
            done
          fi

          git remote remove source
          
          # Checkout migration branch again for PR step later on
          git checkout $MIGRATION_BRANCH
        
      - name: Print Diagram
        working-directory: target
        run: |
          echo "### Git Log:" >> $GITHUB_STEP_SUMMARY
          git log --all --decorate --oneline --graph --date=short --pretty="%ad - %s" >> $GITHUB_STEP_SUMMARY
    
      - name: Push Migration Changes
        working-directory: target
        if: ${{ inputs.push-changes }}
        run: |
          git push --follow-tags --set-upstream origin migration
          git push --all origin
          
      - name: Create Pull Request
        if: ${{ inputs.push-changes }}
        working-directory: target
        env:
          GITHUB_TOKEN: ${{ secrets.RAC2GH_GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "BitBucket Migration from ${{env.BITBUCKET_WORKSPACE}}/${{inputs.bitbucket-repo}}" \
            --body "Automated PR from Migration Workflow" \
            --draft \
            --repo ${{env.GITHUB_ORG}}/${{inputs.github-repo}}
            
      - name: "Set Env Variables for Codacy"
        shell: bash
        if: ${{ inputs.add-to-codacy && inputs.add-to-codacy }}
        run: |
          echo "CODACY_ORGANIZATION_PROVIDER=$(if [[ $GITHUB_SERVER_URL == "https://github.com" ]]; then echo "gh"; else echo "ghe"; fi)" >> $GITHUB_ENV
          echo "CODACY_USERNAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)" >> $GITHUB_ENV
          echo "CODACY_PROJECT_NAME=${{inputs.github-repo}}" >> $GITHUB_ENV
          
      - name: Create Codacy Project if necessary
        shell: pwsh
        if: ${{ inputs.add-to-codacy && inputs.add-to-codacy }}
        run: |
              $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
              $headers.Add("api-token", "${{ secrets.CODACY_API_TOKEN }}")
              $headers.Add("caller", "string")
              $headers.Add("Content-Type", "application/json")
              $body = @{
                repositoryFullPath = "$env:CODACY_USERNAME/$env:CODACY_PROJECT_NAME"
                provider = $env:CODACY_ORGANIZATION_PROVIDER
              } | ConvertTo-Json
              Write-Host "Sending request with body: $body"
              try {
                $response = Invoke-RestMethod 'https://app.codacy.com/api/v3/repositories' -Method 'POST' -Headers $headers -Body $body -SkipHttpErrorCheck
              } catch [System.Net.WebException] {
                Write-Host "An exception was caught: $($_.Exception.Message)"
              }
              $statusCodeInt = [int]$response.BaseResponse.StatusCode
              Write-Host Response: $statusCodeInt
              Write-Host $response
              $response | ConvertTo-Json
